@using translord.Enums
@inject ITranslator Translator
@implements IDialogContentComponent<Dictionary<Language, FluentInputFileEventArgs>>

<FluentDialogBody Class="import-translations-dialog" Style="overflow-y: auto">
    @foreach(var language in Translator.GetSupportedLanguages())
    {
        <FluentStack Orientation="Orientation.Horizontal" Style="margin-top: 30px">
            <span style="width: 120px">@language.GetName()</span>
            <FluentInputFile DragDropZoneVisible="false"
                             Mode="InputFileMode.Stream"
                             Multiple="false"
                             AnchorId="@($"MyUploadButton-{language.GetName()}")"
                             MaximumFileSize="@(100 * 1024 * 1024)"
                             Accept=".txt, .json"
                             OnCompleted="@(x => OnCompleted(language, x))" />

            <FluentButton Id="@($"MyUploadButton-{language.GetName()}")" Appearance="Appearance.Accent" Style="width: 200px">
                Upload @language.GetName() file
            </FluentButton>
            @if (Content.TryGetValue(language, out var file))
            {
                <div style="font-size: 11px">
                    <span>@file.Name</span> - 
                    <span>@($"{Decimal.Divide(@file.Size, 1024):N} KB")</span>
                </div>
            }
        </FluentStack>
    }
</FluentDialogBody>

@code {
    [Parameter] public required Dictionary<Language, FluentInputFileEventArgs> Content { get; set; }

    void OnCompleted(Language lang, IEnumerable<FluentInputFileEventArgs> files)
    {
        Content[lang] = files.First();
    }
}